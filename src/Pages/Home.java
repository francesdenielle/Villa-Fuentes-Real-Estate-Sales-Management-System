/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Pages;

import Classes.BUYER;
import Classes.ESTATE;
import Classes.ESTATE_INTERFACE;
import Classes.TRANSACTION;
import Classes.TRANSACTION_INTERFACE;
import java.awt.Toolkit;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @authors
 * Ang, Kimberly Gale Y.
 * Caberto, Drizzle Joy V.
 * Doydoy, John Darryl A.
 * Magno, Frances Denielle C.
 * Tiongco, Annika Bianca A.
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public Home() throws IOException {
        
        initComponents(); 
        setLocation((Toolkit.getDefaultToolkit().getScreenSize().width  - getSize().width) / 2, (Toolkit.getDefaultToolkit().getScreenSize().height - getSize().height) / 2);
        csvToTable();
    }
    
    public void csvToTable() throws IOException{
        
    
        DefaultTableModel model = (DefaultTableModel) estatesTable.getModel();
        model.setRowCount(0);
        Object[] row  = new Object [9];
        ArrayList<ESTATE> estates = new ArrayList(ESTATE_INTERFACE.ESTATE_ARRAYLIST());
        
        int availUnits = 0;
        int takenUnits = 0;
        
        for(int i = 0; i < estates.size(); i++){
            
            
            if(estates.get(i).getStatus().equals("Available")){
                
                availUnits++;
            }
            else{
                takenUnits++;
            }
          row[0] = estates.get(i).getId();
           row[1] = estates.get(i).getSpecs().getAddress().getBlk();
           row[2] = estates.get(i).getSpecs().getAddress().getLt();
                   row[3] = estates.get(i).getSpecs().getAddress().getHouseNumber();
                   row[4] = estates.get(i).getSpecs().getLotSize();
                   row[5] = estates.get(i).getSpecs().getBr();
                   row[6] = estates.get(i).getSpecs().getStorey();
                   row[7] = estates.get(i).getPrice();
                   row[8] = estates.get(i).getStatus();
                   
                   
                   model.addRow(row);
        }
        
        if(availUnits < 10){
             avail_units.setText("0" + String.valueOf(availUnits));
        }
        else{
             avail_units.setText(String.valueOf(availUnits));
        }
        
        if(takenUnits <10){
             taken_units.setText("0" + String.valueOf(takenUnits));
        }
        else{
             taken_units.setText(String.valueOf(takenUnits));
        }
       
       
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        estatesTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        unitid = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        contact = new javax.swing.JTextField();
        date = new javax.swing.JTextField();
        process = new javax.swing.JButton();
        lease = new javax.swing.JCheckBox();
        buy = new javax.swing.JCheckBox();
        dasdsa = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        avail_units = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        taken_units = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        filterinput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        blk = new javax.swing.JCheckBox();
        lt = new javax.swing.JCheckBox();
        num = new javax.swing.JCheckBox();
        ls = new javax.swing.JCheckBox();
        br = new javax.swing.JCheckBox();
        storey = new javax.swing.JCheckBox();
        price = new javax.swing.JCheckBox();
        status = new javax.swing.JCheckBox();
        filter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        estatesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UNIT ID ", "BLOCK", "LOT", "HOUSE NUMBER", "LOTSIZE", "BEDROOM", "STOREY", "PRICE", "STATUS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(estatesTable);

        jPanel2.setBackground(new java.awt.Color(193, 197, 206));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("PROPERTY ACTION");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 200, 40));
        jPanel2.add(unitid, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 230, 40));
        jPanel2.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 230, 40));
        jPanel2.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 230, 40));
        jPanel2.add(contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 230, 40));
        jPanel2.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 230, 40));

        process.setText("PROCESS");
        process.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processActionPerformed(evt);
            }
        });
        jPanel2.add(process, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 500, 140, 40));

        lease.setForeground(new java.awt.Color(25, 25, 25));
        lease.setText("LEASE");
        jPanel2.add(lease, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 460, -1, -1));

        buy.setForeground(new java.awt.Color(25, 25, 25));
        buy.setText("BUY");
        jPanel2.add(buy, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 460, -1, -1));

        dasdsa.setForeground(new java.awt.Color(25, 25, 25));
        dasdsa.setText("UNIT ID");
        jPanel2.add(dasdsa, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, -1, -1));

        jLabel6.setForeground(new java.awt.Color(25, 25, 25));
        jLabel6.setText("FIRST NAME ");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, -1));

        jLabel7.setForeground(new java.awt.Color(25, 25, 25));
        jLabel7.setText("LAST NAME");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, -1, -1));

        jLabel8.setForeground(new java.awt.Color(25, 25, 25));
        jLabel8.setText("CONTACT NUMBER");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, -1, -1));

        jLabel9.setForeground(new java.awt.Color(25, 25, 25));
        jLabel9.setText("DATE");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, -1, -1));

        jPanel3.setBackground(new java.awt.Color(52, 60, 70));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("AVAILABLE UNITS");

        avail_units.setFont(new java.awt.Font("Segoe UI Black", 1, 48)); // NOI18N
        avail_units.setForeground(new java.awt.Color(255, 255, 255));
        avail_units.setText("XX");
        avail_units.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(avail_units, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(avail_units, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(79, 91, 103));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("UNITS TAKEN");

        taken_units.setFont(new java.awt.Font("Segoe UI Black", 1, 48)); // NOI18N
        taken_units.setForeground(new java.awt.Color(255, 255, 255));
        taken_units.setText("XX");
        taken_units.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(taken_units, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)))
                .addGap(59, 59, 59))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(taken_units, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(101, 115, 126));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/admin.png"))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ADMIN");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(35, 35, 35))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(17, 17, 17))))
        );

        jPanel6.setBackground(new java.awt.Color(124, 252, 0));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("GENERATE REPORT");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("FILTER BY:");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        blk.setText("Block");
        blk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blkActionPerformed(evt);
            }
        });

        lt.setText("Lot");

        num.setText("Number");
        num.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numActionPerformed(evt);
            }
        });

        ls.setText("Lot Size");

        br.setText("BR");

        storey.setText("Storey");
        storey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storeyActionPerformed(evt);
            }
        });

        price.setText("Price");

        status.setText("Status");

        filter.setText("FILTER");
        filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filterinput, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(blk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(num)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ls)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(br)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(storey)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(price)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(status)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filter, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterinput, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabel3)
                    .addComponent(blk)
                    .addComponent(lt)
                    .addComponent(num)
                    .addComponent(ls)
                    .addComponent(br)
                    .addComponent(storey)
                    .addComponent(price)
                    .addComponent(status)
                    .addComponent(filter))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void blkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blkActionPerformed

    private void numActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numActionPerformed

    private void storeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_storeyActionPerformed

    private void filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterActionPerformed
      
        
   
        
        int filterInt;
        String filterString;
       
        
        boolean blkC = blk.isSelected();
        boolean ltC = lt.isSelected();
        boolean numC = num.isSelected();
        boolean lsC = ls.isSelected();
        boolean brC = br.isSelected();
        boolean storeyC = storey.isSelected();
        boolean priceC = price.isSelected();
        boolean statusC = status.isSelected();
        
         DefaultTableModel model = (DefaultTableModel) estatesTable.getModel();
            model.setRowCount(0);
               Object[] row  = new Object [9];
             ArrayList<ESTATE> estates = null;
             
            try {
                estates = new ArrayList(ESTATE_INTERFACE.ESTATE_ARRAYLIST());
            } catch (IOException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        if(blkC || ltC || numC || lsC || brC || storeyC || priceC){
            
            filterInt = Integer.parseInt(filterinput.getText());
            
            
           
        
        
        
        for(int i = 0; i < estates.size(); i++){
            
          row[0] = estates.get(i).getId();
           row[1] = estates.get(i).getSpecs().getAddress().getBlk();
           row[2] = estates.get(i).getSpecs().getAddress().getLt();
                   row[3] = estates.get(i).getSpecs().getAddress().getHouseNumber();
                   row[4] = estates.get(i).getSpecs().getLotSize();
                   row[5] = estates.get(i).getSpecs().getBr();
                   row[6] = estates.get(i).getSpecs().getStorey();
                   row[7] = estates.get(i).getPrice();
                   row[8] = estates.get(i).getStatus();
                   
                   
                   if(blkC && estates.get(i).getSpecs().getAddress().getBlk() == filterInt ){
                         model.addRow(row);
                   }
                   else if(ltC && estates.get(i).getSpecs().getAddress().getLt() == filterInt ){
                        model.addRow(row);
                   }
                   
                   else if(numC && estates.get(i).getSpecs().getAddress().getHouseNumber()== filterInt ){
                        model.addRow(row);
                   }
                 
                   
                   else if(lsC && estates.get(i).getSpecs().getLotSize()== filterInt ){
                        model.addRow(row);
                   }
                   
                    else if(brC && estates.get(i).getSpecs().getBr()== filterInt ){
                        model.addRow(row);
                   }
                   
                    else if(storeyC && estates.get(i).getSpecs().getStorey()== filterInt ){
                        model.addRow(row);
                   }
                   
                    else if(priceC && estates.get(i).getPrice() <= filterInt ){
                        model.addRow(row);
                   }
                   
                   
                   
                 
        }
            
            
            
        }else if(statusC){
            
             filterString =filterinput.getText();
             
               for(int i = 0; i < estates.size(); i++){
            
                    row[0] = estates.get(i).getId();
                     row[1] = estates.get(i).getSpecs().getAddress().getBlk();
                     row[2] = estates.get(i).getSpecs().getAddress().getLt();
                     row[3] = estates.get(i).getSpecs().getAddress().getHouseNumber();
                     row[4] = estates.get(i).getSpecs().getLotSize();
                     row[5] = estates.get(i).getSpecs().getBr();
                     row[6] = estates.get(i).getSpecs().getStorey();
                     row[7] = estates.get(i).getPrice();
                     row[8] = estates.get(i).getStatus();
                   
                   
                     if(filterString.equals(estates.get(i).getStatus())){
                         model.addRow(row);
                     }
               }
            
        }
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_filterActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        try {
            csvToTable();
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel3MouseClicked

    private void processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processActionPerformed
      
        String Status = null;
        boolean isLease = lease.isSelected();
        boolean isBuy = buy.isSelected();
        
        if(isLease){
            Status = "Lessor";
        }
        else if (isBuy){
             Status = "Owner";
        }
        
        double cost = 0;
        
           ArrayList<ESTATE> estates = null; // initialize arraylist for estate object 
        try {
              estates = new ArrayList(ESTATE_INTERFACE.ESTATE_ARRAYLIST());
        } catch (IOException ex) {
          
        }
           
  
            for(int i = 0; i < estates.size() ;i++){  // applying price 
                
                
                if(Integer.parseInt(unitid.getText()) == estates.get(i).getId())
                    
                      if(Status.equals("Lessor")){
                          cost = estates.get(i).getPrice() * .5;  // 50% if lease 
                      }
                      else if(Status.equals("Owner")){
                           cost = estates.get(i).getPrice(); // 100% if buy
                      }
            }
            
           
        
        TRANSACTION transaction = new TRANSACTION( new BUYER(fname.getText(),lname.getText(),contact.getText()),
        cost,Integer.parseInt(unitid.getText()),Status,date.getText()
        );
        
       
        
      
        ArrayList<TRANSACTION> transactions = null;
        try {
            transactions = new ArrayList(TRANSACTION_INTERFACE.TRANSACTION_ARRAYLIST());
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
  
        
        transactions.add(transaction);
        
     //   System.out.println(transactions.get(0).getBuyer());
        
        
         FileWriter transactionwriter = null;
         
         String path = "C:\\Users\\Frances Denielle\\Documents\\NetBeansProjects\\Villa_Fuentes\\src\\csv\\CLIENTS.csv";
         

           
        try {
            transactionwriter = new FileWriter(path);
            
            for(int i =0; i < transactions.size();i++){
                
                
                for(int x = 0; x< estates.size();x++){
                    
                    if(transactions.get(i).getEstateID() == estates.get(x).getId()){
                        
                        if(transactions.get(i).getStanding().equals("Lessor")){
                            
                            estates.get(x).setStatus("Leased");
                        }
                        else if(transactions.get(i).getStanding().equals("Owner")){
                             estates.get(x).setStatus("Occupied");
                        }
                    }
                    
                }                                                                                           //ADDING THE ACQUIRED INFORMATION TO FILESTREAM
                
                transactionwriter.append(transactions.get(i).getBuyer().getFirstname());
                transactionwriter.append(",");
                 transactionwriter.append(transactions.get(i).getBuyer().getLastname());
                  transactionwriter.append(",");
                  transactionwriter.append(transactions.get(i).getBuyer().getContact());
                   transactionwriter.append(",");
                   transactionwriter.append(String.valueOf(transactions.get(i).getCost()));
                    transactionwriter.append(",");
                    transactionwriter.append(String.valueOf(transactions.get(i).getEstateID()));
                    transactionwriter.append(",");
                   transactionwriter.append(String.valueOf(transactions.get(i).getStanding()));
                    transactionwriter.append(",");
                   transactionwriter.append(String.valueOf(transactions.get(i).getDate()));
                    transactionwriter.append("\n");
                  
            }
            
            
            
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
           transactionwriter.flush();
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
           transactionwriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
         FileWriter estatewriter = null;
         
         String file = "C:\\Users\\Frances Denielle\\Documents\\NetBeansProjects\\Villa_Fuentes\\src\\csv\\estates.csv";
       
         try{
             
             estatewriter = new FileWriter(file);
             
             for(int x = 0; x < estates.size();x++){
                 
                 estatewriter.append(String.valueOf(estates.get(x).getId()));
                 estatewriter.append(",");
                 estatewriter.append(String.valueOf(estates.get(x).getSpecs().getAddress().getBlk()));
                  estatewriter.append(",");
                 estatewriter.append(String.valueOf(estates.get(x).getSpecs().getAddress().getLt()));
                  estatewriter.append(",");
                 estatewriter.append(String.valueOf(estates.get(x).getSpecs().getAddress().getHouseNumber()));
                  estatewriter.append(",");
                 estatewriter.append(String.valueOf(estates.get(x).getSpecs().getLotSize()));
                  estatewriter.append(",");
                 estatewriter.append(String.valueOf(estates.get(x).getSpecs().getBr()));
                  estatewriter.append(",");
                  estatewriter.append(String.valueOf(estates.get(x).getSpecs().getStorey()));
                   estatewriter.append(",");
                   estatewriter.append(String.valueOf(estates.get(x).getPrice()));
                    estatewriter.append(",");
                    estatewriter.append(String.valueOf(estates.get(x).getStatus()));
                    estatewriter.append("\n");
             }
             
         }catch(Exception e){
             e.printStackTrace();
         }
         
        try {
            estatewriter.flush();
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            estatewriter.close();
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
     
    
        
        try {
            csvToTable();
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        this.setVisible(false);
        new TransactPrompt().setVisible(true);
        
    }//GEN-LAST:event_processActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        
        this.setVisible(false);
        try {
            new NewReport().setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Home().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel avail_units;
    private javax.swing.JCheckBox blk;
    private javax.swing.JCheckBox br;
    private javax.swing.JCheckBox buy;
    private javax.swing.JTextField contact;
    private javax.swing.JLabel dasdsa;
    private javax.swing.JTextField date;
    private javax.swing.JTable estatesTable;
    private javax.swing.JButton filter;
    private javax.swing.JTextField filterinput;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox lease;
    private javax.swing.JTextField lname;
    private javax.swing.JCheckBox ls;
    private javax.swing.JCheckBox lt;
    private javax.swing.JCheckBox num;
    private javax.swing.JCheckBox price;
    private javax.swing.JButton process;
    private javax.swing.JCheckBox status;
    private javax.swing.JCheckBox storey;
    private javax.swing.JLabel taken_units;
    private javax.swing.JTextField unitid;
    // End of variables declaration//GEN-END:variables
}
